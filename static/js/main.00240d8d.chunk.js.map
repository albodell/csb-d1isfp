{"version":3,"sources":["img/overview.jpg","img/expertise.PNG","img/experience.PNG","img/qual.PNG","img/training.PNG","BulletTable.js","TitleGen.js","GenDocImage.js","GenDoc.js","SkillsTableManual.js","SkillsTable.js","JobFormat.js","QualTable.js","index.js","Manual.js"],"names":["module","exports","__webpack_require__","p","getTextPara","textElement","lvl","arguments","length","undefined","leftM","docx","require","cleanTextArray","split","arrayOne","i","push","Paragraph","spacing","after","bullet","level","children","TextRun","font","size","text","one","TableCell","height","margins","left","convertInchesToTwip","right","borders","tableRow","TableRow","Table","alignment","AlignmentType","CENTER","rows","width","type","WidthType","PERCENTAGE","top","bottom","experienceTitle","titleName","bold","smallCaps","style","BorderStyle","SINGLE","genImage","_this","Object","classCallCheck","this","_super","call","state","data","_callee","_regeneratorRuntime","wrap","_context","prev","next","fetch","then","r","blob","abrupt","sent","stop","Component","generate","values","skillsTitle","titleGen","jobTitle","diplomaTitle","trainTitle","skills","textElement1","textElement2","textElement3","cleanTextArray1","cleanTextArray2","cleanTextArray3","arrayTwo","arrayThree","italics","two","three","skillsTableManual","skillsTable","overview","bulletTable","training","experience","title","company","location","startDate","endDate","duties","allJob","currDuties","underline","break","jobFormat","qualifications","name","date","arrayQ","arrayD","RIGHT","Q","D","qualTable","logo","genLogo","doc","Document","sections","properties","page","margin","before","ImageRun","transformation","floating","horizontalPosition","offset","verticalPosition","Packer","toBlob","console","log","saveAs","InputField","React","forwardRef","props","ref","_splitFormProps","splitFormProps","_splitFormProps2","slicedToArray","field","fieldOptions","rest","getInputProps","useField","react_default","a","createElement","objectSpread2","AreaField","_splitFormProps3","_splitFormProps4","SelectField","_splitFormProps5","_splitFormProps6","App","defaultValues","useMemo","start","end","diplomaName","diplomaLocation","diplomaDate","automatic","manual","resumeType","_useForm","useForm","onSubmit","_onSubmit","asyncToGenerator","src_regeneratorRuntime","mark","instance","Promise","resolve","setTimeout","_x","_x2","apply","debugForm","Form","pushFieldValue","removeFieldValue","_useForm$meta","meta","isSubmitting","isSubmitted","canSubmit","error","placeholder","href","src","alt","for","class","id","onClick","hide","map","job","key","concat","disable","value","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.00240d8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/overview.2f15567d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/expertise.e723b831.PNG\";","module.exports = __webpack_public_path__ + \"static/media/experience.40422f85.PNG\";","module.exports = __webpack_public_path__ + \"static/media/qual.2422ecbc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/training.7459fb46.PNG\";","import {\r\n  TableRow,\r\n  TableCell,\r\n  convertInchesToTwip,\r\n  AlignmentType,\r\n  WidthType,\r\n  TextRun\r\n} from \"docx\";\r\n\r\nexport default function getTextPara(textElement, lvl = 0, leftM = 0.1) {\r\n  var docx = require(\"docx\");\r\n  var cleanTextArray = textElement.split(\"\\n\");\r\n\r\n  var arrayOne = [];\r\n\r\n  for (var i = 0; i < cleanTextArray.length; i++) {\r\n    arrayOne.push(\r\n      new docx.Paragraph({\r\n        spacing: {\r\n          after: 50\r\n        },\r\n        bullet: {\r\n          level: lvl\r\n        },\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            text: cleanTextArray[i]\r\n          })\r\n        ]\r\n      })\r\n    );\r\n  }\r\n\r\n  var one = new TableCell({\r\n    children: arrayOne,\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(leftM),\r\n      right: convertInchesToTwip(0.7)\r\n    },\r\n    borders: {\r\n      left: {\r\n        size: 3\r\n      },\r\n      right: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  const tableRow = new TableRow({\r\n    children: [one]\r\n  });\r\n\r\n  return new docx.Table({\r\n    alignment: AlignmentType.CENTER,\r\n    rows: [tableRow],\r\n    width: {\r\n      size: 120,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    borders: {\r\n      top: {\r\n        size: 3\r\n      },\r\n      bottom: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n}\r\n","import {\r\n  TableRow,\r\n  TableCell,\r\n  BorderStyle,\r\n  AlignmentType,\r\n  WidthType,\r\n  TextRun,\r\n  convertInchesToTwip\r\n} from \"docx\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function experienceTitle(titleName) {\r\n  var docx = require(\"docx\");\r\n\r\n  var one = new TableCell({\r\n    children: [\r\n      new docx.Paragraph({\r\n        alignment: AlignmentType.CENTER,\r\n        children: [\r\n          new TextRun({\r\n            alignment: AlignmentType.CENTER,\r\n            text: titleName,\r\n            size: 24,\r\n            bold: true,\r\n            font: \"Bookman Old Style (Headings)\",\r\n            smallCaps: true\r\n          })\r\n        ]\r\n      })\r\n    ],\r\n    margins: {\r\n      top: convertInchesToTwip(0.03),\r\n      bottom: convertInchesToTwip(0.03)\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    borders: {\r\n      left: {\r\n        size: 3\r\n      },\r\n      right: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  return new docx.Table({\r\n    width: {\r\n      size: 100,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n\r\n    rows: [\r\n      new TableRow({\r\n        children: [one]\r\n      })\r\n    ],\r\n    borders: {\r\n      bottom: {\r\n        style: BorderStyle.SINGLE,\r\n        size: 1\r\n      }\r\n    }\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default class genImage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { data: [] };\r\n  }\r\n\r\n  async genLogo() {\r\n    // const response = await fetch(`https://www.eshocan.com/img/Newlogo.png`);\r\n    // const json = await response.json();\r\n    // this.setState({ data: json });\r\n    return await fetch(\"https://www.eshocan.com/img/Newlogo.png\").then((r) =>\r\n      r.blob()\r\n    );\r\n  }\r\n}\r\n","import \"./styles.css\";\r\nimport docx, {\r\n  Paragraph,\r\n  Document,\r\n  Packer,\r\n  AlignmentType,\r\n  TextRun,\r\n  ImageRun,\r\n  Header\r\n} from \"docx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jobFormat from \"./JobFormat\";\r\nimport skillsTable from \"./SkillsTable\";\r\nimport skillsTableManual from \"./SkillsTableManual\";\r\nimport bulletTable from \"./BulletTable\";\r\nimport titleGen from \"./TitleGen\";\r\nimport qualTable from \"./QualTable\";\r\nimport genLogo from \"./GenDocImage\";\r\nimport * as fs from \"fs\";\r\n\r\n//generates doc and holds basic html headers words and stuff\r\n\r\n//export default function GenDoc(values) {\r\nexport default function generate(values) {\r\n  const skillsTitle = titleGen(\"Technical Experience\");\r\n  const jobTitle = titleGen(\"Professional Highlights\");\r\n  const diplomaTitle = titleGen(\"Academic Qualifications\");\r\n  const trainTitle = titleGen(\"Specialized Training\");\r\n  var skills = \"\";\r\n  if (values[\"manual\"] === \"display\") {\r\n    skills = skillsTableManual(\r\n      values[\"skills1\"],\r\n      values[\"skills2\"],\r\n      values[\"skills3\"]\r\n    );\r\n  } else {\r\n    skills = skillsTable(values[\"skills\"]);\r\n  }\r\n  const overview = bulletTable(values[\"overview\"], 0, 0.5);\r\n  const training = bulletTable(values[\"training\"], 0, 0.5);\r\n  const experience = jobFormat(\r\n    values[\"experience\"],\r\n    values[\"company\"],\r\n    values[\"location\"],\r\n    values[\"start\"],\r\n    values[\"end\"],\r\n    values[\"duties\"]\r\n  );\r\n  const qualifications = qualTable(\r\n    values[\"diplomaName\"],\r\n    values[\"diplomaLocation\"],\r\n    values[\"diplomaDate\"]\r\n  );\r\n  const logo = genLogo;\r\n  const doc = new Document({\r\n    sections: [\r\n      {\r\n        properties: {\r\n          page: {\r\n            margin: {\r\n              right: 1000,\r\n              left: 1000\r\n            }\r\n          }\r\n        },\r\n        // headers: {\r\n        //   default: new Header({\r\n        //     children: [\r\n        //       new Paragraph({\r\n        //         children: [\r\n        //           new ImageRun({\r\n        //             data: fs.readFileSync(\"./img/Newlogo.png\"),\r\n        //             transformation: {\r\n        //               width: 50,\r\n        //               height: 50\r\n        //             }\r\n        //           })\r\n        //         ]\r\n        //       })\r\n        //     ]\r\n        //   })\r\n        // },\r\n        children: [\r\n          new Paragraph({\r\n            alignment: AlignmentType.CENTER,\r\n            spacing: {\r\n              before: 200,\r\n              after: 150\r\n            },\r\n            children: [\r\n              new ImageRun({\r\n                data: logo,\r\n                transformation: {\r\n                  width: 50,\r\n                  height: 50\r\n                },\r\n                floating: {\r\n                  horizontalPosition: {\r\n                    offset: 1014400\r\n                  },\r\n                  verticalPosition: {\r\n                    offset: 1014400\r\n                  }\r\n                }\r\n              }),\r\n              new TextRun({\r\n                text: values[\"name\"],\r\n                font: \"Bookman Old Style\",\r\n                size: 40,\r\n                bold: true,\r\n                underline: true\r\n              }),\r\n              new TextRun({\r\n                text: \" ══════════════════════════════════════════════ \",\r\n                size: 30,\r\n                bold: true,\r\n                break: 1\r\n              }),\r\n              new TextRun({\r\n                break: 1,\r\n                text: values[\"overviewTitle\"],\r\n                font: \"Bookman Old Style\",\r\n                size: 26,\r\n                bold: true,\r\n                smallCaps: true\r\n              })\r\n            ]\r\n          }),\r\n          overview,\r\n          new Paragraph({}),\r\n\r\n          skillsTitle,\r\n          new Paragraph({}),\r\n          skills,\r\n          new Paragraph({}),\r\n\r\n          jobTitle,\r\n          new Paragraph({}),\r\n          experience,\r\n          new Paragraph({}),\r\n\r\n          diplomaTitle,\r\n          new Paragraph({}),\r\n          qualifications,\r\n          new Paragraph({}),\r\n\r\n          trainTitle,\r\n          new Paragraph({}),\r\n          training\r\n        ]\r\n      }\r\n    ]\r\n  });\r\n\r\n  Packer.toBlob(doc).then((blob) => {\r\n    console.log(blob);\r\n    // if (values[\"resumeType\"] === \"doc\"){\r\n    saveAs(blob, \"example.docx\");\r\n    // }\r\n    // else{\r\n    // docxConverter(saveAs(blob, \"example.docx\"),'./output.pdf',function(err,result){})\r\n    // }\r\n    console.log(\"Document created successfully\");\r\n  });\r\n}\r\n","import {\r\n  TableRow,\r\n  TableCell,\r\n  convertInchesToTwip,\r\n  AlignmentType,\r\n  WidthType,\r\n  TextRun\r\n} from \"docx\";\r\n\r\nexport default function getTextPara(textElement1, textElement2, textElement3) {\r\n  var docx = require(\"docx\");\r\n\r\n  // var cleanTextArray = textElement;\r\n  var cleanTextArray1 = textElement1.split(\"\\n\");\r\n  var cleanTextArray2 = textElement2.split(\"\\n\");\r\n  var cleanTextArray3 = textElement3.split(\"\\n\");\r\n  //THESE NEED TO BE IN PARAGRAPH AND TEXTRUN\r\n\r\n  var arrayOne = [];\r\n  var arrayTwo = [];\r\n  var arrayThree = [];\r\n\r\n  for (var i = 0; i < cleanTextArray1.length; i++) {\r\n    arrayOne.push(\r\n      new docx.Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            italics: true,\r\n            text: cleanTextArray1[i]\r\n          })\r\n        ]\r\n      })\r\n    );\r\n  }\r\n\r\n  for (var i = 0; i < cleanTextArray2.length; i++) {\r\n    arrayTwo.push(\r\n      new docx.Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            italics: true,\r\n            text: cleanTextArray2[i]\r\n          })\r\n        ]\r\n      })\r\n    );\r\n  }\r\n\r\n  for (var i = 0; i < cleanTextArray3.length; i++) {\r\n    arrayThree.push(\r\n      new docx.Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            italics: true,\r\n            text: cleanTextArray3[i]\r\n          })\r\n        ]\r\n      })\r\n    );\r\n  }\r\n\r\n  var one = new TableCell({\r\n    children: arrayOne,\r\n    width: {\r\n      size: 33.3,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    },\r\n    borders: {\r\n      left: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  var two = new TableCell({\r\n    children: arrayTwo,\r\n    width: {\r\n      size: 33.3,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    }\r\n  });\r\n\r\n  var three = new TableCell({\r\n    children: arrayThree,\r\n    width: {\r\n      size: 33.3,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    },\r\n    borders: {\r\n      right: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  const tableRow = new TableRow({\r\n    children: [one, two, three]\r\n  });\r\n\r\n  return new docx.Table({\r\n    alignment: AlignmentType.CENTER,\r\n    rows: [tableRow],\r\n    width: {\r\n      size: 100,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    borders: {\r\n      top: {\r\n        size: 3\r\n      },\r\n      bottom: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n}\r\n","import {\r\n  TableRow,\r\n  TableCell,\r\n  convertInchesToTwip,\r\n  AlignmentType,\r\n  WidthType,\r\n  TextRun\r\n} from \"docx\";\r\n\r\nexport default function getTextPara(textElement) {\r\n  var docx = require(\"docx\");\r\n  if (textElement === null) {\r\n    return null;\r\n  }\r\n  // var cleanTextArray = textElement;\r\n  var cleanTextArray = textElement.split(\"\\n\");\r\n  var arrayOne = [];\r\n  var arrayTwo = [];\r\n  var arrayThree = [];\r\n\r\n  for (var i = 0; i < cleanTextArray.length; ) {\r\n    arrayOne.push(\r\n      new docx.Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            italics: true,\r\n            text: cleanTextArray[i]\r\n          })\r\n        ]\r\n      })\r\n    );\r\n    i++;\r\n    if (i >= cleanTextArray.length) {\r\n      break;\r\n    }\r\n    arrayTwo.push(\r\n      new docx.Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            text: cleanTextArray[i]\r\n          })\r\n        ]\r\n      })\r\n    );\r\n    i++;\r\n    if (i >= cleanTextArray.length) {\r\n      break;\r\n    }\r\n\r\n    arrayThree.push(\r\n      new docx.Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            text: cleanTextArray[i]\r\n          })\r\n        ]\r\n      })\r\n    );\r\n    i++;\r\n  }\r\n\r\n  var one = new TableCell({\r\n    children: arrayOne,\r\n    width: {\r\n      size: 33.3,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    },\r\n    borders: {\r\n      left: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  var two = new TableCell({\r\n    children: arrayTwo,\r\n    width: {\r\n      size: 33.3,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    }\r\n  });\r\n\r\n  var three = new TableCell({\r\n    children: arrayThree,\r\n    width: {\r\n      size: 33.3,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    },\r\n    borders: {\r\n      right: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  const tableRow = new TableRow({\r\n    children: [one, two, three]\r\n  });\r\n\r\n  return new docx.Table({\r\n    alignment: AlignmentType.CENTER,\r\n    rows: [tableRow],\r\n    width: {\r\n      size: 100,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    borders: {\r\n      top: {\r\n        size: 3\r\n      },\r\n      bottom: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n}\r\n","import { TextRun, Paragraph } from \"docx\";\r\nimport bulletTable from \"./BulletTable\";\r\n\r\nexport default function getTextPara(\r\n  title,\r\n  company,\r\n  location,\r\n  startDate,\r\n  endDate,\r\n  duties\r\n) {\r\n  var allJob = [new TextRun({})];\r\n\r\n  for (var p = 0; p < title.length; p++) {\r\n    var currDuties = bulletTable(duties[p], 0, 0.6);\r\n    allJob.push(\r\n      new Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            text: p + 1,\r\n            font: \"Bookman Old Style\",\r\n            size: 21,\r\n            bold: true\r\n          }),\r\n          new TextRun({\r\n            text: \".  \",\r\n            font: \"Bookman Old Style\",\r\n            size: 21,\r\n            bold: true\r\n          }),\r\n          new TextRun({\r\n            text: company[p],\r\n            font: \"Bookman Old Style\",\r\n            size: 21,\r\n            bold: true\r\n          }),\r\n          new TextRun({\r\n            text: \" —— \",\r\n            bold: true,\r\n            font: \"Bookman Old Style\",\r\n            size: 21\r\n          }),\r\n          new TextRun({\r\n            text: location[p],\r\n            font: \"Bookman Old Style\",\r\n            size: 21,\r\n            bold: true\r\n          })\r\n        ]\r\n      }),\r\n      new Paragraph({\r\n        children: [\r\n          new TextRun({\r\n            text: title[p],\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            bold: true,\r\n            underline: true,\r\n            break: 1\r\n          }),\r\n          new TextRun({ text: \",  \" }),\r\n          new TextRun({\r\n            text: startDate[p],\r\n            font: \"Bookman Old Style\",\r\n            size: 19\r\n          }),\r\n          new TextRun({\r\n            text: \" to \",\r\n            font: \"Bookman Old Style\",\r\n            size: 19\r\n          }),\r\n          new TextRun({\r\n            text: endDate[p],\r\n            font: \"Bookman Old Style\",\r\n            size: 19\r\n          })\r\n        ]\r\n      }),\r\n\r\n      new Paragraph({}),\r\n      currDuties,\r\n      new Paragraph({})\r\n    );\r\n  }\r\n\r\n  return new Paragraph({\r\n    children: allJob\r\n  });\r\n}\r\n","import {\r\n  TableRow,\r\n  TableCell,\r\n  convertInchesToTwip,\r\n  AlignmentType,\r\n  WidthType,\r\n  TextRun,\r\n  Table,\r\n  Paragraph\r\n} from \"docx\";\r\n\r\nexport default function getTextPara(name, location, date) {\r\n  var arrayQ = [];\r\n  var arrayD = [];\r\n\r\n  for (var i = 0; i < name.length; i++) {\r\n    arrayQ.push(\r\n      new Paragraph({\r\n        spacing: {\r\n          after: 50\r\n        },\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            text: name[i],\r\n            bold: true\r\n          }),\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            text: location[i],\r\n            break: 1\r\n          })\r\n        ]\r\n      })\r\n    );\r\n\r\n    arrayD.push(\r\n      new Paragraph({\r\n        alignment: AlignmentType.RIGHT,\r\n        spacing: {\r\n          after: 50\r\n        },\r\n        children: [\r\n          new TextRun({\r\n            font: \"Bookman Old Style\",\r\n            size: 19,\r\n            text: date[i]\r\n          })\r\n        ]\r\n      }),\r\n      new Paragraph({})\r\n    );\r\n  }\r\n\r\n  var Q = new TableCell({\r\n    children: arrayQ,\r\n    width: {\r\n      size: 75,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    },\r\n    borders: {\r\n      left: {\r\n        size: 3\r\n      },\r\n      right: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  var D = new TableCell({\r\n    children: arrayD,\r\n    width: {\r\n      size: 25,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    height: {\r\n      size: 0.2\r\n    },\r\n    margins: {\r\n      left: convertInchesToTwip(0.1),\r\n      right: convertInchesToTwip(0.1)\r\n    },\r\n    borders: {\r\n      left: {\r\n        size: 3\r\n      },\r\n      right: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n\r\n  const tableRow = new TableRow({\r\n    children: [Q, D]\r\n  });\r\n\r\n  return new Table({\r\n    alignment: AlignmentType.CENTER,\r\n    rows: [tableRow],\r\n    width: {\r\n      size: 100,\r\n      type: WidthType.PERCENTAGE\r\n    },\r\n    borders: {\r\n      top: {\r\n        size: 3\r\n      },\r\n      bottom: {\r\n        size: 3\r\n      }\r\n    }\r\n  });\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport generate from \"./GenDoc\";\nimport hide from \"./Manual\";\nimport \"./styles.css\";\n\nimport { useForm, useField, splitFormProps } from \"react-form\";\n\nconst InputField = React.forwardRef((props, ref) => {\n  const [field, fieldOptions, rest] = splitFormProps(props);\n\n  const { getInputProps } = useField(field, fieldOptions);\n\n  // Build the field\n  return <input {...getInputProps({ ref, ...rest })} />;\n});\n\nconst AreaField = React.forwardRef((props, ref) => {\n  const [field, fieldOptions, rest] = splitFormProps(props);\n\n  // Use the useField hook with a field and field options to access field state\n  const { getInputProps } = useField(field, fieldOptions);\n\n  // Build the field\n  return <textarea {...getInputProps({ ref, ...rest })} />;\n});\n\nconst SelectField = React.forwardRef((props, ref) => {\n  const [field, fieldOptions, rest] = splitFormProps(props);\n\n  // Use the useField hook with a field and field options to access field state\n  const { getInputProps } = useField(field, fieldOptions);\n\n  // Build the field\n  return <select {...getInputProps({ ref, ...rest })} />;\n});\n\nfunction App() {\n  const defaultValues = React.useMemo(\n    () => ({\n      name: \"\",\n      experience: [\"\"],\n      qualifications: [\"\"],\n      company: [\"\"],\n      location: [\"\"],\n      date: [\"\"],\n      start: [\"\"],\n      end: [\"\"],\n      duties: [\"\"],\n      diplomaName: [\"\"],\n      diplomaLocation: [\"\"],\n      diplomaDate: [\"\"],\n      skills: [\"\"],\n      automatic: \"displaybig\",\n      manual: \"hidden\",\n      resumeType: \"doc\"\n    }),\n    []\n  );\n  const {\n    Form,\n    values,\n    pushFieldValue,\n    removeFieldValue,\n    meta: { isSubmitting, isSubmitted, canSubmit, error }\n  } = useForm({\n    defaultValues,\n    onSubmit: async (values, instance) => {\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      console.log(values);\n      generate(values);\n    },\n    debugForm: true\n  });\n\n  return (\n    <Form>\n      <div>\n        <label>\n          Full Name: <InputField field=\"name\" placeholder=\"John Doe\" />\n          <datalist></datalist>\n          {/* Include Logo{\"\"}\n          <input type=\"checkbox\" id=\"switch\" class=\"checkbox\" />\n          <label for=\"switch\" class=\"toggle\" /> */}\n        </label>\n      </div>\n      <fieldset>\n        <legend>\n          Overview{\" \"}\n          <a href=\"#\">\n            ?\n            <span>\n              <img\n                src={require(\"./img/overview.jpg\")}\n                alt=\"image\"\n                height=\"300\"\n              />\n            </span>\n          </a>\n        </legend>\n\n        <label>\n          Overview Title:{\" \"}\n          <InputField field=\"overviewTitle\" placeholder=\"e.g. Engineer\" />\n        </label>\n        <label for=\"title\">Highlights: </label>\n        <AreaField\n          field=\"overview\"\n          placeholder=\"e.g. Graduate Mechanical Engineer with 10+ years of diversified Engineering...\"\n        />\n      </fieldset>\n      <div>\n        <div class=\"test\">\n          Technical Expertise{\" \"}\n          <a href=\"#\">\n            ?\n            <span>\n              <img\n                src={require(\"./img/expertise.PNG\")}\n                alt=\"image\"\n                height=\"300\"\n              />\n            </span>\n          </a>{\" \"}\n          <label id=\"right\">\n            Manual{\" \"}\n            <input\n              onClick={() => hide(values)}\n              type=\"checkbox\"\n              id=\"switch\"\n              class=\"checkbox\"\n            />\n            <label for=\"switch\" class=\"toggle\" />\n          </label>\n          <AreaField\n            id={values[\"automatic\"]}\n            field=\"skills\"\n            placeholder=\"e.g. AutoCAD\"\n          />\n          <AreaField\n            id={values[\"manual\"]}\n            field=\"skills1\"\n            placeholder=\"e.g. AutoCAD\"\n          />\n          <AreaField\n            id={values[\"manual\"]}\n            field=\"skills2\"\n            placeholder=\"e.g. AutoCAD\"\n          />\n          <AreaField\n            id={values[\"manual\"]}\n            field=\"skills3\"\n            placeholder=\"e.g. AutoCAD\"\n          />\n        </div>\n      </div>\n\n      <fieldset>\n        <legend>\n          Experience{\" \"}\n          <a href=\"#\">\n            ?\n            <span>\n              <img\n                src={require(\"./img/experience.PNG\")}\n                alt=\"image\"\n                height=\"350\"\n              />\n            </span>\n          </a>\n        </legend>\n\n        {values.experience.map((job, i) => (\n          <div key={i}>\n            <label>\n              Job Title:{\" \"}\n              <InputField\n                field={`experience.${i}`}\n                placeholder=\"e.g. Product Engineer\"\n              />{\" \"}\n              Company:{\" \"}\n              <InputField field={`company.${i}`} placeholder=\"e.g. Amazon\" />\n              <br />\n              <br />\n              Location:{\" \"}\n              <InputField\n                field={`location.${i}`}\n                placeholder=\"e.g. Detroit, MI\"\n              />{\" \"}\n              Start:{\" \"}\n              <InputField\n                field={`start.${i}`}\n                placeholder=\"e.g. December 2008\"\n              />{\" \"}\n              End: <InputField field={`end.${i}`} placeholder=\"e.g. Present\" />\n              <br />\n              <br />\n            </label>\n            <label>\n              <label>Duties: </label>\n              <AreaField\n                field={`duties.${i}`}\n                placeholder=\"e.g. Lead the engineering team for the development of...\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => removeFieldValue(\"experience\", i)}\n              >\n                X\n              </button>\n            </label>\n            <button\n              type=\"button\"\n              onClick={() => pushFieldValue(\"experience\", \"\")}\n            >\n              Add Job\n            </button>\n          </div>\n        ))}\n      </fieldset>\n\n      <fieldset>\n        <legend>\n          {\" \"}\n          Academic Qualifications{\" \"}\n          <a href=\"#\">\n            ?\n            <span>\n              <img src={require(\"./img/qual.PNG\")} alt=\"image\" height=\"200\" />\n            </span>\n          </a>\n        </legend>\n        <div>\n          {values.qualifications.map((job, i) => (\n            <div key={i}>\n              <label>\n                Diploma Name:{\" \"}\n                <InputField\n                  field={`diplomaName.${i}`}\n                  placeholder=\"e.g. Diploma, Mechanical Engineering\"\n                  id=\"longer\"\n                />{\" \"}\n                Location Earned:{\" \"}\n                <InputField\n                  field={`diplomaLocation.${i}`}\n                  placeholder=\"\"\n                  id=\"longer\"\n                />\n                <br />\n                Date Earned:{\" \"}\n                <InputField\n                  field={`diplomaDate.${i}`}\n                  placeholder=\"e.g. July 2019\"\n                />{\" \"}\n                <button\n                  type=\"button\"\n                  onClick={() => removeFieldValue(\"qualifications\", i)}\n                >\n                  X\n                </button>\n              </label>\n            </div>\n          ))}\n          <button\n            type=\"button\"\n            onClick={() => pushFieldValue(\"qualifications\", \"\")}\n          >\n            Add Diploma\n          </button>\n        </div>\n      </fieldset>\n\n      <div class=\"test\">\n        Specialized Training{\" \"}\n        <a href=\"#\">\n          ?\n          <span>\n            <img src={require(\"./img/training.PNG\")} alt=\"image\" height=\"150\" />\n          </span>\n        </a>\n        <label>\n          <AreaField\n            field=\"training\"\n            placeholder=\"e.g. Catia V5, Walmart, Detroit, MI\"\n          />\n        </label>\n      </div>\n\n      {isSubmitted ? <em>Thanks for submitting!</em> : null}\n\n      {error ? <strong>{error}</strong> : null}\n\n      {isSubmitting ? (\n        \"Submitting...\"\n      ) : (\n        <div>\n          <button type=\"submit\" disable={!canSubmit}>\n            Submit\n          </button>\n          <SelectField field=\"resumeType\">\n            <option value=\"doc\">doc</option>\n            <option value=\"pdf\">pdf</option>\n          </SelectField>\n        </div>\n      )}\n    </Form>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","export default function hide(values) {\r\n  if (values[\"manual\"] === \"display\") {\r\n    values[\"manual\"] = \"hidden\";\r\n    values[\"automatic\"] = \"displaybig\";\r\n  } else {\r\n    values[\"manual\"] = \"display\";\r\n    values[\"automatic\"] = \"hidden\";\r\n  }\r\n}\r\n"],"sourceRoot":""}